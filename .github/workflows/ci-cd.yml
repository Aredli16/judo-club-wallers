name: Symfony Continuous Integration && Continuous Deployment

on:
  push:
    branches: [ "main" ]

jobs:
  symfony-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.21
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: judo-club-wallers
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      mail:
        image: dockage/mailcatcher
        ports:
          - "1025:1025"
          - "1080:1080"

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - uses: actions/checkout@v3

      - name: Copy .env.test.local
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Run migrations
        run: |
          php bin/console doctrine:database:create --env=test
          php bin/console doctrine:migration:migrate --env=test

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit

  security-checker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: symfonycorp/security-checker-action@v4

  build:
    runs-on: ubuntu-latest
    needs: [ security-checker, symfony-test ]

    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.13

      - name: Run composer install
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      - name: Install javascript dependencies
        run: yarn install

      - name: Build javascript
        run: yarn build

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3.1.2
        with:
          name: app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'judo-club-wallers-dev'
          slot-name: 'production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: .